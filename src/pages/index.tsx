/* eslint-disable @next/next/no-img-element */
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
// import Link from "next/link";

import type { RouterOutputs } from "~/utils/api";
import { api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime)

import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;
  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile Image"
        className="h-14 w-14 rounded-full"

        width={100}
        height={100}
      />
      <input
        placeholder="Type some emojis"
        className="w-full bg-transparent p-3 outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div key={post.id} className=" flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author.profilePicture}
        alt="author profile pic"
        className="h-14 w-14 rounded-full"

        width={100}
        height={100}
      />

      <div className="flex flex-col">
      <div className="">
         <span>{`@${author.username}`} </span> . <span className="text-xs">{`${dayjs(post.createdAt).fromNow()}`}</span>
      </div>
      <span>{post.content}</span>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  // const hello = api.posts.hello.useQuery({ text: "from tRPC" });

  const user = useUser();

  const { data, isLoading } = api.posts.getAll.useQuery();

  if (!data || isLoading)
    return (
      <div className="grid h-screen w-full place-items-center">Loading...</div>
    );

  if (!data)
    return (
      <div className="grid h-screen w-full place-items-center">
        Something went wrong!
      </div>
    );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex justify-center ">
        <div className=" h-screen w-full border-x border-x-slate-100 md:max-w-2xl ">
          <div className="border-b border-slate-400 p-4">
            {user.isSignedIn ? <CreatePostWizard /> : null}
            {/* {!user.isSignedIn ? <SignInButton /> : <SignOutButton />} */}
          </div>
          {/* <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" /> */}

          <div className="flex flex-col">
            {data.map((fullpost) => {
              return <PostView key={fullpost.post.id} {...fullpost} />;
            })}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
